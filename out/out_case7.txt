Compute Free(0, 0)
If select 0 in Tree B #Subproblem: 13 Direction: LeftCompute Free(1, 0)
If select 0 in Tree B #Subproblem: 4 Direction: LeftCompute Free(2, 0)
If select 2 in Tree A #Subproblem: 1 Direction: LeftCompute Free(2, 0)
If select 0 in Tree B #Subproblem: 1 Direction: Leftfree[2][0] freeSumA = 0 freeSumB = 0
Free[2][0] = 1
FreeS(2, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
Compute Free(3, 0)
If select 0 in Tree B #Subproblem: 2 Direction: LeftCompute Free(4, 0)
If select 4 in Tree A #Subproblem: 1 Direction: LeftCompute Free(4, 0)
If select 0 in Tree B #Subproblem: 1 Direction: Leftfree[4][0] freeSumA = 0 freeSumB = 0
Free[4][0] = 1
FreeS(4, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[3][0] freeSumA = 1 freeSumB = 0
Compute Free(3, 0)
If select 4(leftmost) in Tree A #Subproblem: 2 Direction: Right
Compute Free(3, 0)
If select 4(rightmost) in Tree A #Subproblem: 2 Direction: Left
Free[3][0] = 2
FreeS(3, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[1][0] freeSumA = 3 freeSumB = 0
Compute Free(1, 0)
If select 2(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(1, 0)
If select 3(rightmost) in Tree A #Subproblem: 5 Direction: Left
Free[1][0] = 4
FreeS(1, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
Compute Free(5, 0)
If select 0 in Tree B #Subproblem: 6 Direction: LeftCompute Free(6, 0)
If select 6 in Tree A #Subproblem: 1 Direction: LeftCompute Free(6, 0)
If select 0 in Tree B #Subproblem: 1 Direction: Leftfree[6][0] freeSumA = 0 freeSumB = 0
Free[6][0] = 1
FreeS(6, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
Compute Free(7, 0)
If select 0 in Tree B #Subproblem: 4 Direction: LeftCompute Free(8, 0)
If select 0 in Tree B #Subproblem: 3 Direction: LeftCompute Free(9, 0)
If select 9 in Tree A #Subproblem: 1 Direction: LeftCompute Free(9, 0)
If select 0 in Tree B #Subproblem: 1 Direction: Leftfree[9][0] freeSumA = 0 freeSumB = 0
Free[9][0] = 1
FreeS(9, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
Compute Free(10, 0)
If select 10 in Tree A #Subproblem: 1 Direction: LeftCompute Free(10, 0)
If select 0 in Tree B #Subproblem: 1 Direction: Leftfree[10][0] freeSumA = 0 freeSumB = 0
Free[10][0] = 1
FreeS(10, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[8][0] freeSumA = 2 freeSumB = 0
Compute Free(8, 0)
If select 9(leftmost) in Tree A #Subproblem: 4 Direction: Right
Compute Free(8, 0)
If select 10(rightmost) in Tree A #Subproblem: 4 Direction: Left
Free[8][0] = 3
FreeS(8, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[7][0] freeSumA = 3 freeSumB = 0
Compute Free(7, 0)
If select 8(leftmost) in Tree A #Subproblem: 5 Direction: Right
Compute Free(7, 0)
If select 8(rightmost) in Tree A #Subproblem: 5 Direction: Left
Free[7][0] = 4
FreeS(7, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[5][0] freeSumA = 5 freeSumB = 0
Compute Free(5, 0)
If select 6(leftmost) in Tree A #Subproblem: 10 Direction: Right
Compute Free(5, 0)
If select 7(rightmost) in Tree A #Subproblem: 8 Direction: Left
Free[5][0] = 6
FreeS(5, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
Compute Free(11, 0)
If select 0 in Tree B #Subproblem: 2 Direction: LeftCompute Free(12, 0)
If select 12 in Tree A #Subproblem: 1 Direction: LeftCompute Free(12, 0)
If select 0 in Tree B #Subproblem: 1 Direction: Leftfree[12][0] freeSumA = 0 freeSumB = 0
Free[12][0] = 1
FreeS(12, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[11][0] freeSumA = 1 freeSumB = 0
Compute Free(11, 0)
If select 12(leftmost) in Tree A #Subproblem: 2 Direction: Right
Compute Free(11, 0)
If select 12(rightmost) in Tree A #Subproblem: 2 Direction: Left
Free[11][0] = 2
FreeS(11, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
free[0][0] freeSumA = 12 freeSumB = 0
Compute Free(0, 0)
If select 1(leftmost) in Tree A #Subproblem: 22 Direction: Right
Compute Free(0, 0)
If select 5 in Tree A #Subproblem: 21 Direction: Left
Compute Free(0, 0)
If select 11(rightmost) in Tree A #Subproblem: 23 Direction: Left
Free[0][0] = 13
FreeS(0, 0)
Keynode: 0 in TreeB
Direction: rightLeaf: 0
RESULT
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
0 in B 
Free
13 
4 
1 
2 
1 
6 
1 
4 
3 
1 
1 
2 
1 

LeftA
-1 
5 
1 
-1 
1 
-1 
1 
-1 
4 
1 
-1 
-1 
1 

RightA
-1 
-1 
-1 
2 
1 
-1 
-1 
5 
4 
-1 
1 
2 
1 

AllA
-1 
-1 
-1 
2 
1 
8 
1 
5 
4 
1 
1 
-1 
1 

LeftB
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 

RightB
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 

AllB
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 
-1 

cost = 13.000000
delta Result
12 
3 
0 
1 
0 
5 
0 
3 
2 
0 
0 
1 
0 

TreeDistance(11, 0)
Compute forestdist(12, 0)
delta[12, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute forestdist(11, 0)
delta[11, 0] = 1.000000
forestdist[2, 1] = 2.000000
TreeDistance(10, 0)
Compute forestdist(10, 0)
delta[10, 0] = 0.000000
forestdist[1, 1] = 1.000000
TreeDistance(7, 0)
Compute forestdist(9, 0)
delta[9, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute forestdist(10, 0)
forestdist[2, 1] = 2.000000
Compute forestdist(8, 0)
delta[8, 0] = 2.000000
forestdist[3, 1] = 3.000000
Compute forestdist(7, 0)
delta[7, 0] = 3.000000
forestdist[4, 1] = 4.000000
TreeDistance(5, 0)
Compute forestdist(6, 0)
delta[6, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute forestdist(9, 0)
forestdist[2, 1] = 2.000000
Compute forestdist(10, 0)
forestdist[3, 1] = 3.000000
Compute forestdist(8, 0)
forestdist[4, 1] = 4.000000
Compute forestdist(7, 0)
forestdist[5, 1] = 5.000000
Compute forestdist(5, 0)
delta[5, 0] = 5.000000
forestdist[6, 1] = 6.000000
TreeDistance(3, 0)
Compute forestdist(4, 0)
delta[4, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute forestdist(3, 0)
delta[3, 0] = 1.000000
forestdist[2, 1] = 2.000000
TreeDistance(0, 0)
Compute forestdist(2, 0)
delta[2, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute forestdist(4, 0)
forestdist[2, 1] = 2.000000
Compute forestdist(3, 0)
forestdist[3, 1] = 3.000000
Compute forestdist(1, 0)
delta[1, 0] = 3.000000
forestdist[4, 1] = 4.000000
Compute forestdist(6, 0)
forestdist[5, 1] = 5.000000
Compute forestdist(9, 0)
forestdist[6, 1] = 6.000000
Compute forestdist(10, 0)
forestdist[7, 1] = 7.000000
Compute forestdist(8, 0)
forestdist[8, 1] = 8.000000
Compute forestdist(7, 0)
forestdist[9, 1] = 9.000000
Compute forestdist(5, 0)
forestdist[10, 1] = 10.000000
Compute forestdist(12, 0)
forestdist[11, 1] = 11.000000
Compute forestdist(11, 0)
forestdist[12, 1] = 12.000000
Compute forestdist(0, 0)
delta[0, 0] = 12.000000
forestdist[13, 1] = 13.000000
delta Result LL
12 
3 
0 
1 
0 
5 
0 
3 
2 
0 
0 
1 
0 

RevTreeDistance(6, 0)
Compute revforestdist(6, 0)
delta[6, 0] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
RevTreeDistance(9, 0)
Compute revforestdist(9, 0)
delta[9, 0] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
RevTreeDistance(5, 0)
Compute revforestdist(10, 0)
delta[10, 0] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute revforestdist(9, 0)
forestdist[2, 1] = 2.000000
Compute revforestdist(8, 0)
delta[8, 0] = forestdist[2, 0] = 2.000000
forestdist[3, 1] = 3.000000
Compute revforestdist(7, 0)
delta[7, 0] = forestdist[3, 0] = 3.000000
forestdist[4, 1] = 4.000000
Compute revforestdist(6, 0)
forestdist[5, 1] = 5.000000
Compute revforestdist(5, 0)
delta[5, 0] = forestdist[5, 0] = 5.000000
forestdist[6, 1] = 6.000000
RevTreeDistance(2, 0)
Compute revforestdist(2, 0)
delta[2, 0] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
RevTreeDistance(1, 0)
Compute revforestdist(4, 0)
delta[4, 0] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute revforestdist(3, 0)
delta[3, 0] = forestdist[1, 0] = 1.000000
forestdist[2, 1] = 2.000000
Compute revforestdist(2, 0)
forestdist[3, 1] = 3.000000
Compute revforestdist(1, 0)
delta[1, 0] = forestdist[3, 0] = 3.000000
forestdist[4, 1] = 4.000000
RevTreeDistance(0, 0)
Compute revforestdist(12, 0)
delta[12, 0] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute revforestdist(11, 0)
delta[11, 0] = forestdist[1, 0] = 1.000000
forestdist[2, 1] = 2.000000
Compute revforestdist(10, 0)
forestdist[3, 1] = 3.000000
Compute revforestdist(9, 0)
forestdist[4, 1] = 4.000000
Compute revforestdist(8, 0)
forestdist[5, 1] = 5.000000
Compute revforestdist(7, 0)
forestdist[6, 1] = 6.000000
Compute revforestdist(6, 0)
forestdist[7, 1] = 7.000000
Compute revforestdist(5, 0)
forestdist[8, 1] = 8.000000
Compute revforestdist(4, 0)
forestdist[9, 1] = 9.000000
Compute revforestdist(3, 0)
forestdist[10, 1] = 10.000000
Compute revforestdist(2, 0)
forestdist[11, 1] = 11.000000
Compute revforestdist(1, 0)
forestdist[12, 1] = 12.000000
Compute revforestdist(0, 0)
delta[0, 0] = forestdist[12, 0] = 12.000000
forestdist[13, 1] = 13.000000
delta Result RR
12 
3 
0 
1 
0 
5 
0 
3 
2 
0 
0 
1 
0 

