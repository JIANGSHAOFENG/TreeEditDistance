Compute Free(1, 0)
If select 1 in Tree A #Subproblem: 4 Direction: LeftCompute Free(1, 1)
If select 1 in Tree A #Subproblem: 1 Direction: LeftCompute Free(1, 1)
If select 1 in Tree B #Subproblem: 1 Direction: Leftfree[1][1] freeSumA = 0 freeSumB = 0
Free[1][1] = 1
FreeS(1, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(1, 2)
If select 1 in Tree A #Subproblem: 1 Direction: LeftCompute Free(1, 2)
If select 2 in Tree B #Subproblem: 1 Direction: Leftfree[1][2] freeSumA = 0 freeSumB = 0
Free[1][2] = 1
FreeS(1, 2)
Keynode: 2 in TreeB
Direction: rightLeaf: 2
Compute Free(1, 3)
If select 1 in Tree A #Subproblem: 1 Direction: LeftCompute Free(1, 3)
If select 3 in Tree B #Subproblem: 1 Direction: Leftfree[1][3] freeSumA = 0 freeSumB = 0
Free[1][3] = 1
FreeS(1, 3)
Keynode: 3 in TreeB
Direction: rightLeaf: 3
free[1][0] freeSumA = 0 freeSumB = 3
Compute Free(1, 0)
If select 1(leftmost) in Tree B #Subproblem: 6 Direction: Right
Compute Free(1, 0)
If select 2 in Tree B #Subproblem: 6 Direction: Left
Compute Free(1, 0)
If select 3(rightmost) in Tree B #Subproblem: 6 Direction: Left
Free[1][0] = 4
FreeS(1, 0)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(2, 0)
If select 2 in Tree A #Subproblem: 4 Direction: LeftCompute Free(2, 1)
If select 2 in Tree A #Subproblem: 1 Direction: LeftCompute Free(2, 1)
If select 1 in Tree B #Subproblem: 1 Direction: Leftfree[2][1] freeSumA = 0 freeSumB = 0
Free[2][1] = 1
FreeS(2, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(2, 2)
If select 2 in Tree A #Subproblem: 1 Direction: LeftCompute Free(2, 2)
If select 2 in Tree B #Subproblem: 1 Direction: Leftfree[2][2] freeSumA = 0 freeSumB = 0
Free[2][2] = 1
FreeS(2, 2)
Keynode: 2 in TreeB
Direction: rightLeaf: 2
Compute Free(2, 3)
If select 2 in Tree A #Subproblem: 1 Direction: LeftCompute Free(2, 3)
If select 3 in Tree B #Subproblem: 1 Direction: Leftfree[2][3] freeSumA = 0 freeSumB = 0
Free[2][3] = 1
FreeS(2, 3)
Keynode: 3 in TreeB
Direction: rightLeaf: 3
free[2][0] freeSumA = 0 freeSumB = 3
Compute Free(2, 0)
If select 1(leftmost) in Tree B #Subproblem: 6 Direction: Right
Compute Free(2, 0)
If select 2 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 0)
If select 3(rightmost) in Tree B #Subproblem: 6 Direction: Left
Free[2][0] = 4
FreeS(2, 0)
Keynode: 2 in Tree A
Direction: rightLeaf: 2
Compute Free(0, 1)
If select 1 in Tree B #Subproblem: 3 Direction: Leftfree[0][1] freeSumA = 2 freeSumB = 0
Compute Free(0, 1)
If select 1(leftmost) in Tree A #Subproblem: 4 Direction: Right
Compute Free(0, 1)
If select 2(rightmost) in Tree A #Subproblem: 4 Direction: Left
Free[0][1] = 3
FreeS(0, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(0, 2)
If select 2 in Tree B #Subproblem: 3 Direction: Leftfree[0][2] freeSumA = 2 freeSumB = 0
Compute Free(0, 2)
If select 1(leftmost) in Tree A #Subproblem: 4 Direction: Right
Compute Free(0, 2)
If select 2(rightmost) in Tree A #Subproblem: 4 Direction: Left
Free[0][2] = 3
FreeS(0, 2)
Keynode: 2 in TreeB
Direction: rightLeaf: 2
Compute Free(0, 3)
If select 3 in Tree B #Subproblem: 3 Direction: Leftfree[0][3] freeSumA = 2 freeSumB = 0
Compute Free(0, 3)
If select 1(leftmost) in Tree A #Subproblem: 4 Direction: Right
Compute Free(0, 3)
If select 2(rightmost) in Tree A #Subproblem: 4 Direction: Left
Free[0][3] = 3
FreeS(0, 3)
Keynode: 3 in TreeB
Direction: rightLeaf: 3
free[0][0] freeSumA = 8 freeSumB = 9
Compute Free(0, 0)
If select 1(leftmost) in Tree A #Subproblem: 22 Direction: Right
Compute Free(0, 0)
If select 2(rightmost) in Tree A #Subproblem: 22 Direction: Left
Compute Free(0, 0)
If select 1(leftmost) in Tree B #Subproblem: 22 Direction: Right
Compute Free(0, 0)
If select 2 in Tree B #Subproblem: 22 Direction: Left
Compute Free(0, 0)
If select 3(rightmost) in Tree B #Subproblem: 22 Direction: Left
Free[0][0] = 22
FreeS(0, 0)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
RESULT
1 in A 1 in B 2 in B 3 in B 
1 in A 1 in B 2 in B 3 in B 
2 in A 1 in B 2 in B 3 in B 
Free
22 3 3 3 
4 1 1 1 
4 1 1 1 

LeftA
-1 -1 -1 -1 
6 1 1 1 
-1 -1 -1 -1 

RightA
-1 -1 -1 -1 
-1 -1 -1 -1 
6 1 1 1 

AllA
-1 -1 -1 -1 
-1 -1 -1 -1 
-1 -1 -1 -1 

LeftB
-1 4 -1 -1 
-1 1 -1 -1 
-1 1 -1 -1 

RightB
-1 -1 -1 4 
-1 -1 -1 1 
-1 -1 -1 1 

AllB
-1 -1 4 -1 
-1 -1 1 -1 
-1 -1 1 -1 

TreeDistance(0, 2)
Compute forestdist(1, 2)
forestdist[1, 1] = 1.000000
Compute forestdist(2, 2)
forestdist[2, 1] = 2.000000
Compute forestdist(0, 2)
forestdist[3, 1] = 2.000000
TreeDistance(0, 1)
Compute forestdist(1, 1)
forestdist[1, 1] = 1.000000
Compute forestdist(2, 1)
forestdist[2, 1] = 2.000000
Compute forestdist(0, 1)
forestdist[3, 1] = 3.000000
TreeDistance(0, 0)
Compute forestdist(1, 1)
forestdist[1, 1] = 1.000000
Compute forestdist(1, 2)
forestdist[1, 2] = 2.000000
Compute forestdist(1, 3)
forestdist[1, 3] = 3.000000
Compute forestdist(1, 0)
forestdist[1, 4] = 4.000000
Compute forestdist(2, 1)
forestdist[2, 1] = 2.000000
Compute forestdist(2, 2)
forestdist[2, 2] = 2.000000
Compute forestdist(2, 3)
forestdist[2, 3] = 3.000000
Compute forestdist(2, 0)
forestdist[2, 4] = 4.000000
Compute forestdist(0, 1)
forestdist[3, 1] = 3.000000
Compute forestdist(0, 2)
forestdist[3, 2] = 3.000000
Compute forestdist(0, 3)
forestdist[3, 3] = 4.000000
Compute forestdist(0, 0)
forestdist[3, 4] = 4.000000
