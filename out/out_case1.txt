Compute Free(1, 0)
If select 1 in Tree A #Subproblem: 6 Direction: LeftCompute Free(1, 1)
If select 1 in Tree A #Subproblem: 1 Direction: LeftCompute Free(1, 1)
If select 1 in Tree B #Subproblem: 1 Direction: Leftfree[1][1] freeSumA = 0 freeSumB = 0
Free[1][1] = 1
FreeS(1, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(1, 2)
If select 1 in Tree A #Subproblem: 4 Direction: LeftCompute Free(1, 3)
If select 1 in Tree A #Subproblem: 3 Direction: LeftCompute Free(1, 4)
If select 1 in Tree A #Subproblem: 1 Direction: LeftCompute Free(1, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Leftfree[1][4] freeSumA = 0 freeSumB = 0
Free[1][4] = 1
FreeS(1, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(1, 5)
If select 1 in Tree A #Subproblem: 1 Direction: LeftCompute Free(1, 5)
If select 5 in Tree B #Subproblem: 1 Direction: Leftfree[1][5] freeSumA = 0 freeSumB = 0
Free[1][5] = 1
FreeS(1, 5)
Keynode: 5 in TreeB
Direction: rightLeaf: 5
free[1][3] freeSumA = 0 freeSumB = 2
Compute Free(1, 3)
If select 4(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(1, 3)
If select 5(rightmost) in Tree B #Subproblem: 4 Direction: Left
Free[1][3] = 3
FreeS(1, 3)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
free[1][2] freeSumA = 0 freeSumB = 3
Compute Free(1, 2)
If select 3(leftmost) in Tree B #Subproblem: 5 Direction: Right
Compute Free(1, 2)
If select 3(rightmost) in Tree B #Subproblem: 5 Direction: Left
Free[1][2] = 4
FreeS(1, 2)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
free[1][0] freeSumA = 0 freeSumB = 5
Compute Free(1, 0)
If select 1(leftmost) in Tree B #Subproblem: 10 Direction: Right
Compute Free(1, 0)
If select 2(rightmost) in Tree B #Subproblem: 8 Direction: Left
Free[1][0] = 6
FreeS(1, 0)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(4, 0)
If select 4 in Tree A #Subproblem: 6 Direction: LeftCompute Free(4, 1)
If select 4 in Tree A #Subproblem: 1 Direction: LeftCompute Free(4, 1)
If select 1 in Tree B #Subproblem: 1 Direction: Leftfree[4][1] freeSumA = 0 freeSumB = 0
Free[4][1] = 1
FreeS(4, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(4, 2)
If select 4 in Tree A #Subproblem: 4 Direction: LeftCompute Free(4, 3)
If select 4 in Tree A #Subproblem: 3 Direction: LeftCompute Free(4, 4)
If select 4 in Tree A #Subproblem: 1 Direction: LeftCompute Free(4, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Leftfree[4][4] freeSumA = 0 freeSumB = 0
Free[4][4] = 1
FreeS(4, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(4, 5)
If select 4 in Tree A #Subproblem: 1 Direction: LeftCompute Free(4, 5)
If select 5 in Tree B #Subproblem: 1 Direction: Leftfree[4][5] freeSumA = 0 freeSumB = 0
Free[4][5] = 1
FreeS(4, 5)
Keynode: 5 in TreeB
Direction: rightLeaf: 5
free[4][3] freeSumA = 0 freeSumB = 2
Compute Free(4, 3)
If select 4(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(4, 3)
If select 5(rightmost) in Tree B #Subproblem: 4 Direction: Left
Free[4][3] = 3
FreeS(4, 3)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
free[4][2] freeSumA = 0 freeSumB = 3
Compute Free(4, 2)
If select 3(leftmost) in Tree B #Subproblem: 5 Direction: Right
Compute Free(4, 2)
If select 3(rightmost) in Tree B #Subproblem: 5 Direction: Left
Free[4][2] = 4
FreeS(4, 2)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
free[4][0] freeSumA = 0 freeSumB = 5
Compute Free(4, 0)
If select 1(leftmost) in Tree B #Subproblem: 10 Direction: Right
Compute Free(4, 0)
If select 2(rightmost) in Tree B #Subproblem: 8 Direction: Left
Free[4][0] = 6
FreeS(4, 0)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(3, 1)
If select 1 in Tree B #Subproblem: 2 Direction: Leftfree[3][1] freeSumA = 1 freeSumB = 0
Compute Free(3, 1)
If select 4(leftmost) in Tree A #Subproblem: 2 Direction: Right
Compute Free(3, 1)
If select 4(rightmost) in Tree A #Subproblem: 2 Direction: Left
Free[3][1] = 2
FreeS(3, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(3, 4)
If select 4 in Tree B #Subproblem: 2 Direction: Leftfree[3][4] freeSumA = 1 freeSumB = 0
Compute Free(3, 4)
If select 4(leftmost) in Tree A #Subproblem: 2 Direction: Right
Compute Free(3, 4)
If select 4(rightmost) in Tree A #Subproblem: 2 Direction: Left
Free[3][4] = 2
FreeS(3, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(3, 5)
If select 5 in Tree B #Subproblem: 2 Direction: Leftfree[3][5] freeSumA = 1 freeSumB = 0
Compute Free(3, 5)
If select 4(leftmost) in Tree A #Subproblem: 2 Direction: Right
Compute Free(3, 5)
If select 4(rightmost) in Tree A #Subproblem: 2 Direction: Left
Free[3][5] = 2
FreeS(3, 5)
Keynode: 5 in TreeB
Direction: rightLeaf: 5
free[3][3] freeSumA = 3 freeSumB = 4
Compute Free(3, 3)
If select 4(leftmost) in Tree A #Subproblem: 8 Direction: Right
Compute Free(3, 3)
If select 4(rightmost) in Tree A #Subproblem: 8 Direction: Left
Compute Free(3, 3)
If select 4(leftmost) in Tree B #Subproblem: 8 Direction: Right
Compute Free(3, 3)
If select 5(rightmost) in Tree B #Subproblem: 8 Direction: Left
Free[3][3] = 8
FreeS(3, 3)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
free[3][2] freeSumA = 4 freeSumB = 8
Compute Free(3, 2)
If select 4(leftmost) in Tree A #Subproblem: 10 Direction: Right
Compute Free(3, 2)
If select 4(rightmost) in Tree A #Subproblem: 10 Direction: Left
Compute Free(3, 2)
If select 3(leftmost) in Tree B #Subproblem: 10 Direction: Right
Compute Free(3, 2)
If select 3(rightmost) in Tree B #Subproblem: 10 Direction: Left
Free[3][2] = 10
FreeS(3, 2)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
free[3][0] freeSumA = 6 freeSumB = 12
Compute Free(3, 0)
If select 4(leftmost) in Tree A #Subproblem: 22 Direction: Right
Compute Free(3, 0)
If select 4(rightmost) in Tree A #Subproblem: 16 Direction: Left
Compute Free(3, 0)
If select 1(leftmost) in Tree B #Subproblem: 22 Direction: Right
Compute Free(3, 0)
If select 2(rightmost) in Tree B #Subproblem: 16 Direction: Left
Free[3][0] = 16
FreeS(3, 0)
Keynode: 4 in Tree A
Direction: left
Leaf: 4
Compute Free(5, 0)
If select 5 in Tree A #Subproblem: 6 Direction: LeftCompute Free(5, 1)
If select 5 in Tree A #Subproblem: 1 Direction: LeftCompute Free(5, 1)
If select 1 in Tree B #Subproblem: 1 Direction: Leftfree[5][1] freeSumA = 0 freeSumB = 0
Free[5][1] = 1
FreeS(5, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(5, 2)
If select 5 in Tree A #Subproblem: 4 Direction: LeftCompute Free(5, 3)
If select 5 in Tree A #Subproblem: 3 Direction: LeftCompute Free(5, 4)
If select 5 in Tree A #Subproblem: 1 Direction: LeftCompute Free(5, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Leftfree[5][4] freeSumA = 0 freeSumB = 0
Free[5][4] = 1
FreeS(5, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(5, 5)
If select 5 in Tree A #Subproblem: 1 Direction: LeftCompute Free(5, 5)
If select 5 in Tree B #Subproblem: 1 Direction: Leftfree[5][5] freeSumA = 0 freeSumB = 0
Free[5][5] = 1
FreeS(5, 5)
Keynode: 5 in TreeB
Direction: rightLeaf: 5
free[5][3] freeSumA = 0 freeSumB = 2
Compute Free(5, 3)
If select 4(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(5, 3)
If select 5(rightmost) in Tree B #Subproblem: 4 Direction: Left
Free[5][3] = 3
FreeS(5, 3)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
free[5][2] freeSumA = 0 freeSumB = 3
Compute Free(5, 2)
If select 3(leftmost) in Tree B #Subproblem: 5 Direction: Right
Compute Free(5, 2)
If select 3(rightmost) in Tree B #Subproblem: 5 Direction: Left
Free[5][2] = 4
FreeS(5, 2)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
free[5][0] freeSumA = 0 freeSumB = 5
Compute Free(5, 0)
If select 1(leftmost) in Tree B #Subproblem: 10 Direction: Right
Compute Free(5, 0)
If select 2(rightmost) in Tree B #Subproblem: 8 Direction: Left
Free[5][0] = 6
FreeS(5, 0)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(2, 1)
If select 1 in Tree B #Subproblem: 4 Direction: Leftfree[2][1] freeSumA = 3 freeSumB = 0
Compute Free(2, 1)
If select 3(leftmost) in Tree A #Subproblem: 5 Direction: Right
Compute Free(2, 1)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
Free[2][1] = 4
FreeS(2, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(2, 4)
If select 4 in Tree B #Subproblem: 4 Direction: Leftfree[2][4] freeSumA = 3 freeSumB = 0
Compute Free(2, 4)
If select 3(leftmost) in Tree A #Subproblem: 5 Direction: Right
Compute Free(2, 4)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
Free[2][4] = 4
FreeS(2, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(2, 5)
If select 5 in Tree B #Subproblem: 4 Direction: Leftfree[2][5] freeSumA = 3 freeSumB = 0
Compute Free(2, 5)
If select 3(leftmost) in Tree A #Subproblem: 5 Direction: Right
Compute Free(2, 5)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
Free[2][5] = 4
FreeS(2, 5)
Keynode: 5 in TreeB
Direction: rightLeaf: 5
free[2][3] freeSumA = 11 freeSumB = 8
Compute Free(2, 3)
If select 3(leftmost) in Tree A #Subproblem: 19 Direction: Right
Compute Free(2, 3)
If select 5(rightmost) in Tree A #Subproblem: 24 Direction: Left
Compute Free(2, 3)
If select 4(leftmost) in Tree B #Subproblem: 19 Direction: Right
Compute Free(2, 3)
If select 5(rightmost) in Tree B #Subproblem: 22 Direction: Left
Free[2][3] = 19
FreeS(2, 3)
Keynode: 3 in Tree A
Direction: rightLeaf: 4
free[2][2] freeSumA = 14 freeSumB = 19
Compute Free(2, 2)
If select 3(leftmost) in Tree A #Subproblem: 24 Direction: Right
Compute Free(2, 2)
If select 5(rightmost) in Tree A #Subproblem: 30 Direction: Left
Compute Free(2, 2)
If select 3(leftmost) in Tree B #Subproblem: 24 Direction: Right
Compute Free(2, 2)
If select 3(rightmost) in Tree B #Subproblem: 28 Direction: Left
Free[2][2] = 24
FreeS(2, 2)
Keynode: 3 in Tree A
Direction: rightLeaf: 4
free[2][0] freeSumA = 22 freeSumB = 28
Compute Free(2, 0)
If select 3(leftmost) in Tree A #Subproblem: 50 Direction: Right
Compute Free(2, 0)
If select 5(rightmost) in Tree A #Subproblem: 48 Direction: Left
Compute Free(2, 0)
If select 1(leftmost) in Tree B #Subproblem: 54 Direction: Right
Compute Free(2, 0)
If select 2(rightmost) in Tree B #Subproblem: 44 Direction: Left
Free[2][0] = 44
FreeS(2, 0)
Keynode: 2 in TreeB
Direction: left
Leaf: 5
Compute Free(0, 1)
If select 1 in Tree B #Subproblem: 6 Direction: Leftfree[0][1] freeSumA = 5 freeSumB = 0
Compute Free(0, 1)
If select 1(leftmost) in Tree A #Subproblem: 10 Direction: Right
Compute Free(0, 1)
If select 2(rightmost) in Tree A #Subproblem: 8 Direction: Left
Free[0][1] = 6
FreeS(0, 1)
Keynode: 1 in TreeB
Direction: rightLeaf: 1
Compute Free(0, 4)
If select 4 in Tree B #Subproblem: 6 Direction: Leftfree[0][4] freeSumA = 5 freeSumB = 0
Compute Free(0, 4)
If select 1(leftmost) in Tree A #Subproblem: 10 Direction: Right
Compute Free(0, 4)
If select 2(rightmost) in Tree A #Subproblem: 8 Direction: Left
Free[0][4] = 6
FreeS(0, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(0, 5)
If select 5 in Tree B #Subproblem: 6 Direction: Leftfree[0][5] freeSumA = 5 freeSumB = 0
Compute Free(0, 5)
If select 1(leftmost) in Tree A #Subproblem: 10 Direction: Right
Compute Free(0, 5)
If select 2(rightmost) in Tree A #Subproblem: 8 Direction: Left
Free[0][5] = 6
FreeS(0, 5)
Keynode: 5 in TreeB
Direction: rightLeaf: 5
free[0][3] freeSumA = 22 freeSumB = 12
Compute Free(0, 3)
If select 1(leftmost) in Tree A #Subproblem: 43 Direction: Right
Compute Free(0, 3)
If select 2(rightmost) in Tree A #Subproblem: 30 Direction: Left
Compute Free(0, 3)
If select 4(leftmost) in Tree B #Subproblem: 39 Direction: Right
Compute Free(0, 3)
If select 5(rightmost) in Tree B #Subproblem: 33 Direction: Left
Free[0][3] = 30
FreeS(0, 3)
Keynode: 2 in Tree A
Direction: left
Leaf: 4
free[0][2] freeSumA = 28 freeSumB = 30
Compute Free(0, 2)
If select 1(leftmost) in Tree A #Subproblem: 54 Direction: Right
Compute Free(0, 2)
If select 2(rightmost) in Tree A #Subproblem: 38 Direction: Left
Compute Free(0, 2)
If select 3(leftmost) in Tree B #Subproblem: 50 Direction: Right
Compute Free(0, 2)
If select 3(rightmost) in Tree B #Subproblem: 42 Direction: Left
Free[0][2] = 38
FreeS(0, 2)
Keynode: 2 in Tree A
Direction: left
Leaf: 4
free[0][0] freeSumA = 50 freeSumB = 44
Compute Free(0, 0)
If select 1(leftmost) in Tree A #Subproblem: 110 Direction: Right
Compute Free(0, 0)
If select 2(rightmost) in Tree A #Subproblem: 70 Direction: Left
Compute Free(0, 0)
If select 1(leftmost) in Tree B #Subproblem: 104 Direction: Right
Compute Free(0, 0)
If select 2(rightmost) in Tree B #Subproblem: 66 Direction: Left
Free[0][0] = 66
FreeS(0, 0)
Keynode: 2 in TreeB
Direction: left
Leaf: 5
RESULT
5 in B 1 in B 4 in A 4 in A 4 in B 5 in B 
1 in A 1 in B 1 in A 1 in A 4 in B 5 in B 
5 in B 1 in B 4 in A 4 in A 4 in B 5 in B 
4 in A 1 in B 4 in A 4 in A 4 in B 5 in B 
4 in A 1 in B 4 in A 4 in A 4 in B 5 in B 
5 in A 1 in B 5 in A 5 in A 4 in B 5 in B 
Free
66 6 38 30 6 6 
6 1 4 3 1 1 
44 4 24 19 4 4 
16 2 10 8 2 2 
6 1 4 3 1 1 
6 1 4 3 1 1 

LeftA
-1 -1 -1 -1 -1 -1 
11 1 5 4 1 1 
-1 -1 -1 -1 -1 -1 
22 2 10 8 2 2 
11 1 5 4 1 1 
-1 -1 -1 -1 -1 -1 

RightA
-1 -1 -1 -1 -1 -1 
-1 -1 -1 -1 -1 -1 
48 5 24 19 5 5 
-1 -1 -1 -1 -1 -1 
8 1 5 4 1 1 
8 1 5 4 1 1 

AllA
-1 -1 -1 -1 -1 -1 
-1 -1 -1 -1 -1 -1 
-1 -1 -1 -1 -1 -1 
22 2 10 8 2 2 
11 1 5 4 1 1 
-1 -1 -1 -1 -1 -1 

LeftB
-1 11 -1 39 11 -1 
-1 1 -1 4 1 -1 
-1 5 -1 19 5 -1 
-1 2 -1 8 2 -1 
-1 1 -1 4 1 -1 
-1 1 -1 4 1 -1 

RightB
-1 -1 42 33 -1 9 
-1 -1 5 4 -1 1 
-1 -1 28 22 -1 6 
-1 -1 10 8 -1 2 
-1 -1 5 4 -1 1 
-1 -1 5 4 -1 1 

AllB
-1 -1 -1 42 12 12 
-1 -1 -1 4 1 1 
-1 -1 -1 22 6 6 
-1 -1 -1 8 2 2 
-1 -1 -1 4 1 1 
-1 -1 -1 4 1 1 

RevTreeDistance(0, 1)
Compute revforestdist(5, 1)
delta[1, 5] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute revforestdist(4, 1)
forestdist[2, 1] = 2.000000
Compute revforestdist(3, 1)
delta[1, 3] = forestdist[2, 0] = 2.000000
forestdist[3, 1] = 3.000000
Compute revforestdist(2, 1)
delta[1, 2] = forestdist[3, 0] = 3.000000
forestdist[4, 1] = 4.000000
Compute revforestdist(1, 1)
forestdist[5, 1] = 4.000000
Compute revforestdist(0, 1)
delta[1, 0] = forestdist[5, 0] = 5.000000
forestdist[6, 1] = 5.000000
RevTreeDistance(0, 3)
Compute revforestdist(5, 4)
delta[4, 5] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 1.000000
Compute revforestdist(5, 3)
delta[3, 5] = forestdist[0, 1] = 1.000000
forestdist[1, 2] = 2.000000
Compute revforestdist(4, 4)
forestdist[2, 1] = 1.000000
Compute revforestdist(4, 3)
forestdist[2, 2] = 2.000000
Compute revforestdist(3, 4)
delta[4, 3] = forestdist[2, 0] = 2.000000
forestdist[3, 1] = 2.000000
Compute revforestdist(3, 3)
delta[3, 3] = forestdist[2, 1] = 1.000000
forestdist[3, 2] = 2.000000
Compute revforestdist(2, 4)
delta[4, 2] = forestdist[3, 0] = 3.000000
forestdist[4, 1] = 3.000000
Compute revforestdist(2, 3)
delta[3, 2] = forestdist[3, 1] = 2.000000
forestdist[4, 2] = 2.000000
Compute revforestdist(1, 4)
forestdist[5, 1] = 4.000000
Compute revforestdist(1, 3)
forestdist[5, 2] = 3.000000
Compute revforestdist(0, 4)
delta[4, 0] = forestdist[5, 0] = 5.000000
forestdist[6, 1] = 5.000000
Compute revforestdist(0, 3)
delta[3, 0] = forestdist[5, 1] = 4.000000
forestdist[6, 2] = 4.000000
RevTreeDistance(0, 0)
Compute revforestdist(5, 5)
delta[5, 5] = forestdist[0, 0] = 0.000000
forestdist[1, 1] = 0.000000
Compute revforestdist(5, 4)
forestdist[1, 2] = 1.000000
Compute revforestdist(5, 3)
forestdist[1, 3] = 2.000000
Compute revforestdist(5, 2)
delta[2, 5] = forestdist[0, 3] = 3.000000
forestdist[1, 4] = 3.000000
Compute revforestdist(5, 1)
forestdist[1, 5] = 4.000000
Compute revforestdist(5, 0)
delta[0, 5] = forestdist[0, 5] = 5.000000
forestdist[1, 6] = 5.000000
Compute revforestdist(4, 5)
forestdist[2, 1] = 1.000000
Compute revforestdist(4, 4)
forestdist[2, 2] = 0.000000
Compute revforestdist(4, 3)
forestdist[2, 3] = 1.000000
Compute revforestdist(4, 2)
forestdist[2, 4] = 2.000000
Compute revforestdist(4, 1)
forestdist[2, 5] = 3.000000
Compute revforestdist(4, 0)
forestdist[2, 6] = 4.000000
Compute revforestdist(3, 5)
delta[5, 3] = forestdist[2, 0] = 2.000000
forestdist[3, 1] = 2.000000
Compute revforestdist(3, 4)
forestdist[3, 2] = 1.000000
Compute revforestdist(3, 3)
forestdist[3, 3] = 2.000000
Compute revforestdist(3, 2)
delta[2, 3] = forestdist[2, 3] = 1.000000
forestdist[3, 4] = 1.000000
Compute revforestdist(3, 1)
forestdist[3, 5] = 2.000000
Compute revforestdist(3, 0)
delta[0, 3] = forestdist[2, 5] = 3.000000
forestdist[3, 6] = 3.000000
Compute revforestdist(2, 5)
delta[5, 2] = forestdist[3, 0] = 3.000000
forestdist[4, 1] = 3.000000
Compute revforestdist(2, 4)
forestdist[4, 2] = 2.000000
Compute revforestdist(2, 3)
forestdist[4, 3] = 3.000000
Compute revforestdist(2, 2)
delta[2, 2] = forestdist[3, 3] = 2.000000
forestdist[4, 4] = 2.000000
Compute revforestdist(2, 1)
forestdist[4, 5] = 3.000000
Compute revforestdist(2, 0)
delta[0, 2] = forestdist[3, 5] = 2.000000
forestdist[4, 6] = 3.000000
Compute revforestdist(1, 5)
forestdist[5, 1] = 4.000000
Compute revforestdist(1, 4)
forestdist[5, 2] = 3.000000
Compute revforestdist(1, 3)
forestdist[5, 3] = 4.000000
Compute revforestdist(1, 2)
forestdist[5, 4] = 3.000000
Compute revforestdist(1, 1)
forestdist[5, 5] = 2.000000
Compute revforestdist(1, 0)
forestdist[5, 6] = 3.000000
Compute revforestdist(0, 5)
delta[5, 0] = forestdist[5, 0] = 5.000000
forestdist[6, 1] = 5.000000
Compute revforestdist(0, 4)
forestdist[6, 2] = 4.000000
Compute revforestdist(0, 3)
forestdist[6, 3] = 5.000000
Compute revforestdist(0, 2)
delta[2, 0] = forestdist[5, 3] = 4.000000
forestdist[6, 4] = 4.000000
Compute revforestdist(0, 1)
forestdist[6, 5] = 3.000000
Compute revforestdist(0, 0)
delta[0, 0] = forestdist[5, 5] = 2.000000
forestdist[6, 6] = 2.000000
