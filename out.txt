Compute Free(1, 0)
If select 1 in Tree A #Subproblem: 18 Direction: Right
Compute Free(1, 1)
If select 1 in Tree A #Subproblem: 6 Direction: Left
Compute Free(1, 2)
If select 1 in Tree A #Subproblem: 1 Direction: Left
Compute Free(1, 2)
If select 2 in Tree B #Subproblem: 1 Direction: Left
FreeS(1, 2)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 3)
If select 1 in Tree A #Subproblem: 1 Direction: Left
Compute Free(1, 3)
If select 3 in Tree B #Subproblem: 1 Direction: Left
FreeS(1, 3)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 4)
If select 1 in Tree A #Subproblem: 1 Direction: Left
Compute Free(1, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Left
FreeS(1, 4)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 1)
If select 2(leftmost) in Tree B #Subproblem: 6 Direction: Right
Compute Free(1, 1)
If select 3 in Tree B #Subproblem: 6 Direction: Left
Compute Free(1, 1)
If select 4(rightmost) in Tree B #Subproblem: 6 Direction: Left
FreeS(1, 1)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 5)
If select 1 in Tree A #Subproblem: 4 Direction: Left
Compute Free(1, 6)
If select 1 in Tree A #Subproblem: 1 Direction: Left
Compute Free(1, 6)
If select 6 in Tree B #Subproblem: 1 Direction: Left
FreeS(1, 6)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 7)
If select 1 in Tree A #Subproblem: 1 Direction: Left
Compute Free(1, 7)
If select 7 in Tree B #Subproblem: 1 Direction: Left
FreeS(1, 7)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 5)
If select 6(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(1, 5)
If select 7(rightmost) in Tree B #Subproblem: 4 Direction: Left
FreeS(1, 5)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 8)
If select 1 in Tree A #Subproblem: 2 Direction: Left
Compute Free(1, 9)
If select 1 in Tree A #Subproblem: 1 Direction: Left
Compute Free(1, 9)
If select 9 in Tree B #Subproblem: 1 Direction: Left
FreeS(1, 9)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 8)
If select 9(leftmost) in Tree B #Subproblem: 2 Direction: Right
Compute Free(1, 8)
If select 9(rightmost) in Tree B #Subproblem: 2 Direction: Left
FreeS(1, 8)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(1, 0)
If select 1(leftmost) in Tree B #Subproblem: 18 Direction: Right
Compute Free(1, 0)
If select 5 in Tree B #Subproblem: 19 Direction: Left
Compute Free(1, 0)
If select 8(rightmost) in Tree B #Subproblem: 20 Direction: Left
FreeS(1, 0)
Keynode: 1 in Tree A
Direction: rightLeaf: 1
Compute Free(3, 0)
If select 3 in Tree A #Subproblem: 18 Direction: Right
Compute Free(3, 1)
If select 3 in Tree A #Subproblem: 6 Direction: Left
Compute Free(3, 2)
If select 3 in Tree A #Subproblem: 1 Direction: Left
Compute Free(3, 2)
If select 2 in Tree B #Subproblem: 1 Direction: Left
FreeS(3, 2)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 3)
If select 3 in Tree A #Subproblem: 1 Direction: Left
Compute Free(3, 3)
If select 3 in Tree B #Subproblem: 1 Direction: Left
FreeS(3, 3)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 4)
If select 3 in Tree A #Subproblem: 1 Direction: Left
Compute Free(3, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Left
FreeS(3, 4)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 1)
If select 2(leftmost) in Tree B #Subproblem: 6 Direction: Right
Compute Free(3, 1)
If select 3 in Tree B #Subproblem: 6 Direction: Left
Compute Free(3, 1)
If select 4(rightmost) in Tree B #Subproblem: 6 Direction: Left
FreeS(3, 1)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 5)
If select 3 in Tree A #Subproblem: 4 Direction: Left
Compute Free(3, 6)
If select 3 in Tree A #Subproblem: 1 Direction: Left
Compute Free(3, 6)
If select 6 in Tree B #Subproblem: 1 Direction: Left
FreeS(3, 6)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 7)
If select 3 in Tree A #Subproblem: 1 Direction: Left
Compute Free(3, 7)
If select 7 in Tree B #Subproblem: 1 Direction: Left
FreeS(3, 7)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 5)
If select 6(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(3, 5)
If select 7(rightmost) in Tree B #Subproblem: 4 Direction: Left
FreeS(3, 5)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 8)
If select 3 in Tree A #Subproblem: 2 Direction: Left
Compute Free(3, 9)
If select 3 in Tree A #Subproblem: 1 Direction: Left
Compute Free(3, 9)
If select 9 in Tree B #Subproblem: 1 Direction: Left
FreeS(3, 9)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 8)
If select 9(leftmost) in Tree B #Subproblem: 2 Direction: Right
Compute Free(3, 8)
If select 9(rightmost) in Tree B #Subproblem: 2 Direction: Left
FreeS(3, 8)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(3, 0)
If select 1(leftmost) in Tree B #Subproblem: 18 Direction: Right
Compute Free(3, 0)
If select 5 in Tree B #Subproblem: 19 Direction: Left
Compute Free(3, 0)
If select 8(rightmost) in Tree B #Subproblem: 20 Direction: Left
FreeS(3, 0)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(4, 0)
If select 4 in Tree A #Subproblem: 18 Direction: Right
Compute Free(4, 1)
If select 4 in Tree A #Subproblem: 6 Direction: Left
Compute Free(4, 2)
If select 4 in Tree A #Subproblem: 1 Direction: Left
Compute Free(4, 2)
If select 2 in Tree B #Subproblem: 1 Direction: Left
FreeS(4, 2)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 3)
If select 4 in Tree A #Subproblem: 1 Direction: Left
Compute Free(4, 3)
If select 3 in Tree B #Subproblem: 1 Direction: Left
FreeS(4, 3)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 4)
If select 4 in Tree A #Subproblem: 1 Direction: Left
Compute Free(4, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Left
FreeS(4, 4)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 1)
If select 2(leftmost) in Tree B #Subproblem: 6 Direction: Right
Compute Free(4, 1)
If select 3 in Tree B #Subproblem: 6 Direction: Left
Compute Free(4, 1)
If select 4(rightmost) in Tree B #Subproblem: 6 Direction: Left
FreeS(4, 1)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 5)
If select 4 in Tree A #Subproblem: 4 Direction: Left
Compute Free(4, 6)
If select 4 in Tree A #Subproblem: 1 Direction: Left
Compute Free(4, 6)
If select 6 in Tree B #Subproblem: 1 Direction: Left
FreeS(4, 6)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 7)
If select 4 in Tree A #Subproblem: 1 Direction: Left
Compute Free(4, 7)
If select 7 in Tree B #Subproblem: 1 Direction: Left
FreeS(4, 7)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 5)
If select 6(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(4, 5)
If select 7(rightmost) in Tree B #Subproblem: 4 Direction: Left
FreeS(4, 5)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 8)
If select 4 in Tree A #Subproblem: 2 Direction: Left
Compute Free(4, 9)
If select 4 in Tree A #Subproblem: 1 Direction: Left
Compute Free(4, 9)
If select 9 in Tree B #Subproblem: 1 Direction: Left
FreeS(4, 9)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 8)
If select 9(leftmost) in Tree B #Subproblem: 2 Direction: Right
Compute Free(4, 8)
If select 9(rightmost) in Tree B #Subproblem: 2 Direction: Left
FreeS(4, 8)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(4, 0)
If select 1(leftmost) in Tree B #Subproblem: 18 Direction: Right
Compute Free(4, 0)
If select 5 in Tree B #Subproblem: 19 Direction: Left
Compute Free(4, 0)
If select 8(rightmost) in Tree B #Subproblem: 20 Direction: Left
FreeS(4, 0)
Keynode: 4 in Tree A
Direction: rightLeaf: 4
Compute Free(5, 0)
If select 5 in Tree A #Subproblem: 18 Direction: Right
Compute Free(5, 1)
If select 5 in Tree A #Subproblem: 6 Direction: Left
Compute Free(5, 2)
If select 5 in Tree A #Subproblem: 1 Direction: Left
Compute Free(5, 2)
If select 2 in Tree B #Subproblem: 1 Direction: Left
FreeS(5, 2)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 3)
If select 5 in Tree A #Subproblem: 1 Direction: Left
Compute Free(5, 3)
If select 3 in Tree B #Subproblem: 1 Direction: Left
FreeS(5, 3)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 4)
If select 5 in Tree A #Subproblem: 1 Direction: Left
Compute Free(5, 4)
If select 4 in Tree B #Subproblem: 1 Direction: Left
FreeS(5, 4)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 1)
If select 2(leftmost) in Tree B #Subproblem: 6 Direction: Right
Compute Free(5, 1)
If select 3 in Tree B #Subproblem: 6 Direction: Left
Compute Free(5, 1)
If select 4(rightmost) in Tree B #Subproblem: 6 Direction: Left
FreeS(5, 1)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 5)
If select 5 in Tree A #Subproblem: 4 Direction: Left
Compute Free(5, 6)
If select 5 in Tree A #Subproblem: 1 Direction: Left
Compute Free(5, 6)
If select 6 in Tree B #Subproblem: 1 Direction: Left
FreeS(5, 6)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 7)
If select 5 in Tree A #Subproblem: 1 Direction: Left
Compute Free(5, 7)
If select 7 in Tree B #Subproblem: 1 Direction: Left
FreeS(5, 7)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 5)
If select 6(leftmost) in Tree B #Subproblem: 4 Direction: Right
Compute Free(5, 5)
If select 7(rightmost) in Tree B #Subproblem: 4 Direction: Left
FreeS(5, 5)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 8)
If select 5 in Tree A #Subproblem: 2 Direction: Left
Compute Free(5, 9)
If select 5 in Tree A #Subproblem: 1 Direction: Left
Compute Free(5, 9)
If select 9 in Tree B #Subproblem: 1 Direction: Left
FreeS(5, 9)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 8)
If select 9(leftmost) in Tree B #Subproblem: 2 Direction: Right
Compute Free(5, 8)
If select 9(rightmost) in Tree B #Subproblem: 2 Direction: Left
FreeS(5, 8)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(5, 0)
If select 1(leftmost) in Tree B #Subproblem: 18 Direction: Right
Compute Free(5, 0)
If select 5 in Tree B #Subproblem: 19 Direction: Left
Compute Free(5, 0)
If select 8(rightmost) in Tree B #Subproblem: 20 Direction: Left
FreeS(5, 0)
Keynode: 5 in Tree A
Direction: rightLeaf: 5
Compute Free(2, 2)
If select 2 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 2)
If select 3(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(2, 2)
If select 4 in Tree A #Subproblem: 6 Direction: Left
RightA[5, 2] set to 5
Compute Free(2, 2)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
FreeS(2, 2)
Keynode: 2 in TreeB
Direction: rightLeaf: 2
Compute Free(2, 3)
If select 3 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 3)
If select 3(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(2, 3)
If select 4 in Tree A #Subproblem: 6 Direction: Left
RightA[5, 3] set to 5
Compute Free(2, 3)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
FreeS(2, 3)
Keynode: 3 in TreeB
Direction: rightLeaf: 3
Compute Free(2, 4)
If select 4 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 4)
If select 3(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(2, 4)
If select 4 in Tree A #Subproblem: 6 Direction: Left
RightA[5, 4] set to 5
Compute Free(2, 4)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
FreeS(2, 4)
Keynode: 4 in TreeB
Direction: rightLeaf: 4
Compute Free(2, 1)
If select 3(leftmost) in Tree A #Subproblem: 36 Direction: Right
Compute Free(2, 1)
If select 4 in Tree A #Subproblem: 38 Direction: Left
RightA[5, 1] set to 5
Compute Free(2, 1)
If select 5(rightmost) in Tree A #Subproblem: 36 Direction: Left
Compute Free(2, 1)
If select 2(leftmost) in Tree B #Subproblem: 36 Direction: Right
Compute Free(2, 1)
If select 3 in Tree B #Subproblem: 38 Direction: Left
Compute Free(2, 1)
If select 4(rightmost) in Tree B #Subproblem: 36 Direction: Left
FreeS(2, 1)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(2, 6)
If select 6 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 6)
If select 3(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(2, 6)
If select 4 in Tree A #Subproblem: 6 Direction: Left
RightA[5, 6] set to 5
Compute Free(2, 6)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
FreeS(2, 6)
Keynode: 6 in TreeB
Direction: rightLeaf: 6
Compute Free(2, 7)
If select 7 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 7)
If select 3(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(2, 7)
If select 4 in Tree A #Subproblem: 6 Direction: Left
RightA[5, 7] set to 5
Compute Free(2, 7)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
FreeS(2, 7)
Keynode: 7 in TreeB
Direction: rightLeaf: 7
Compute Free(2, 5)
If select 3(leftmost) in Tree A #Subproblem: 24 Direction: Right
Compute Free(2, 5)
If select 4 in Tree A #Subproblem: 24 Direction: Left
RightA[5, 5] set to 5
Compute Free(2, 5)
If select 5(rightmost) in Tree A #Subproblem: 24 Direction: Left
Compute Free(2, 5)
If select 6(leftmost) in Tree B #Subproblem: 24 Direction: Right
Compute Free(2, 5)
If select 7(rightmost) in Tree B #Subproblem: 24 Direction: Left
FreeS(2, 5)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(2, 9)
If select 9 in Tree B #Subproblem: 6 Direction: Left
Compute Free(2, 9)
If select 3(leftmost) in Tree A #Subproblem: 6 Direction: Right
Compute Free(2, 9)
If select 4 in Tree A #Subproblem: 6 Direction: Left
RightA[5, 9] set to 5
Compute Free(2, 9)
If select 5(rightmost) in Tree A #Subproblem: 6 Direction: Left
FreeS(2, 9)
Keynode: 9 in TreeB
Direction: rightLeaf: 9
Compute Free(2, 8)
If select 3(leftmost) in Tree A #Subproblem: 12 Direction: Right
Compute Free(2, 8)
If select 4 in Tree A #Subproblem: 12 Direction: Left
RightA[5, 8] set to 5
Compute Free(2, 8)
If select 5(rightmost) in Tree A #Subproblem: 12 Direction: Left
Compute Free(2, 8)
If select 9(leftmost) in Tree B #Subproblem: 12 Direction: Right
Compute Free(2, 8)
If select 9(rightmost) in Tree B #Subproblem: 12 Direction: Left
FreeS(2, 8)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(2, 0)
If select 3(leftmost) in Tree A #Subproblem: 108 Direction: Right
Compute Free(2, 0)
If select 4 in Tree A #Subproblem: 152 Direction: Right
RightA[5, 0] set to 5
Compute Free(2, 0)
If select 5(rightmost) in Tree A #Subproblem: 116 Direction: Left
Compute Free(2, 0)
If select 1(leftmost) in Tree B #Subproblem: 108 Direction: Right
Compute Free(2, 0)
If select 5 in Tree B #Subproblem: 119 Direction: Left
Compute Free(2, 0)
If select 8(rightmost) in Tree B #Subproblem: 120 Direction: Left
FreeS(2, 0)
Keynode: 3 in Tree A
Direction: rightLeaf: 3
Compute Free(0, 2)
If select 2 in Tree B #Subproblem: 12 Direction: Left
Compute Free(0, 2)
If select 1(leftmost) in Tree A #Subproblem: 12 Direction: Right
RightA[2, 2] set to 3
Compute Free(0, 2)
If select 2(rightmost) in Tree A #Subproblem: 9 Direction: Left
FreeS(0, 2)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 3)
If select 3 in Tree B #Subproblem: 12 Direction: Left
Compute Free(0, 3)
If select 1(leftmost) in Tree A #Subproblem: 12 Direction: Right
RightA[2, 3] set to 3
Compute Free(0, 3)
If select 2(rightmost) in Tree A #Subproblem: 9 Direction: Left
FreeS(0, 3)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 4)
If select 4 in Tree B #Subproblem: 12 Direction: Left
Compute Free(0, 4)
If select 1(leftmost) in Tree A #Subproblem: 12 Direction: Right
RightA[2, 4] set to 3
Compute Free(0, 4)
If select 2(rightmost) in Tree A #Subproblem: 9 Direction: Left
FreeS(0, 4)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 1)
If select 1(leftmost) in Tree A #Subproblem: 72 Direction: Right
RightA[2, 1] set to 5
Compute Free(0, 1)
If select 2(rightmost) in Tree A #Subproblem: 54 Direction: Left
Compute Free(0, 1)
If select 2(leftmost) in Tree B #Subproblem: 66 Direction: Right
Compute Free(0, 1)
If select 3 in Tree B #Subproblem: 62 Direction: Left
Compute Free(0, 1)
If select 4(rightmost) in Tree B #Subproblem: 54 Direction: Left
FreeS(0, 1)
Keynode: 2 in Tree A
Direction: left
Leaf: 5
Compute Free(0, 6)
If select 6 in Tree B #Subproblem: 12 Direction: Left
Compute Free(0, 6)
If select 1(leftmost) in Tree A #Subproblem: 12 Direction: Right
RightA[2, 6] set to 3
Compute Free(0, 6)
If select 2(rightmost) in Tree A #Subproblem: 9 Direction: Left
FreeS(0, 6)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 7)
If select 7 in Tree B #Subproblem: 12 Direction: Left
Compute Free(0, 7)
If select 1(leftmost) in Tree A #Subproblem: 12 Direction: Right
RightA[2, 7] set to 3
Compute Free(0, 7)
If select 2(rightmost) in Tree A #Subproblem: 9 Direction: Left
FreeS(0, 7)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 5)
If select 1(leftmost) in Tree A #Subproblem: 48 Direction: Right
RightA[2, 5] set to 3
Compute Free(0, 5)
If select 2(rightmost) in Tree A #Subproblem: 36 Direction: Left
Compute Free(0, 5)
If select 6(leftmost) in Tree B #Subproblem: 45 Direction: Right
Compute Free(0, 5)
If select 7(rightmost) in Tree B #Subproblem: 36 Direction: Left
FreeS(0, 5)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 9)
If select 9 in Tree B #Subproblem: 12 Direction: Left
Compute Free(0, 9)
If select 1(leftmost) in Tree A #Subproblem: 12 Direction: Right
RightA[2, 9] set to 3
Compute Free(0, 9)
If select 2(rightmost) in Tree A #Subproblem: 9 Direction: Left
FreeS(0, 9)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 8)
If select 1(leftmost) in Tree A #Subproblem: 24 Direction: Right
RightA[2, 8] set to 3
Compute Free(0, 8)
If select 2(rightmost) in Tree A #Subproblem: 18 Direction: Left
Compute Free(0, 8)
If select 9(leftmost) in Tree B #Subproblem: 24 Direction: Right
Compute Free(0, 8)
If select 9(rightmost) in Tree B #Subproblem: 18 Direction: Left
FreeS(0, 8)
Keynode: 2 in Tree A
Direction: left
Leaf: 3
Compute Free(0, 0)
If select 1(leftmost) in Tree A #Subproblem: 216 Direction: Right
RightA[2, 0] set to 5
Compute Free(0, 0)
If select 2(rightmost) in Tree A #Subproblem: 168 Direction: Left
Compute Free(0, 0)
If select 1(leftmost) in Tree B #Subproblem: 192 Direction: Right
Compute Free(0, 0)
If select 5 in Tree B #Subproblem: 191 Direction: Left
Compute Free(0, 0)
If select 8(rightmost) in Tree B #Subproblem: 183 Direction: Left
FreeS(0, 0)
Keynode: 2 in Tree A
Direction: left
Leaf: 5
RESULT
5 in A 5 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 
1 in A 1 in A 1 in A 1 in A 1 in A 1 in A 1 in A 1 in A 1 in A 1 in A 
3 in A 3 in A 2 in B 3 in B 4 in B 3 in A 6 in B 7 in B 3 in A 9 in B 
3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 3 in A 
4 in A 4 in A 4 in A 4 in A 4 in A 4 in A 4 in A 4 in A 4 in A 4 in A 
5 in A 5 in A 5 in A 5 in A 5 in A 5 in A 5 in A 5 in A 5 in A 5 in A 
gted(0, 0)
treeSizeA = 6
treeSizeB = 10
getPathType A(0 ,5) = 1
A child = 3 currentPathNode = 5 parent = 2
gted(0, 0) create problem in A gted(3, 0)
gted(3, 0)
treeSizeA = 1
treeSizeB = 10
return 0.0f
A child = 4 currentPathNode = 5 parent = 2
gted(0, 0) create problem in A gted(4, 0)
gted(4, 0)
treeSizeA = 1
treeSizeB = 10
return 0.0f
A child = 5 currentPathNode = 5 parent = 2
A child = 1 currentPathNode = 2 parent = 0
gted(0, 0) create problem in A gted(1, 0)
gted(1, 0)
treeSizeA = 1
treeSizeB = 10
return 0.0f
A child = 2 currentPathNode = 2 parent = 0
swap = false pathType = 1
